/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Sampath
 */
public class DoctorReg extends javax.swing.JFrame {

    /**
     * Creates new form DoctorReg
     */
    public DoctorReg() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dfn = new javax.swing.JTextField();
        dln = new javax.swing.JTextField();
        spcl_fld = new javax.swing.JTextField();
        spcl = new javax.swing.JRadioButton();
        cnslt = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        d_addr = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        d_cntct = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sbmt = new javax.swing.JButton();
        ml = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fml = new javax.swing.JRadioButton();
        dctNic = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        d_wrd1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        updt = new javax.swing.JButton();
        dlt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        empID = new javax.swing.JTextField();
        dctID = new javax.swing.JTextField();
        spclID = new javax.swing.JTextField();
        cnsltID = new javax.swing.JTextField();
        srch1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(227, 222, 222));
        jPanel1.setMaximumSize(new java.awt.Dimension(750, 562));
        jPanel1.setMinimumSize(new java.awt.Dimension(750, 562));
        jPanel1.setPreferredSize(new java.awt.Dimension(750, 562));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Doctor Registration Form");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 260, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Doctor's First Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 140, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Address");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 100, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Contact No");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 100, 30));

        dfn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        dfn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dfnActionPerformed(evt);
            }
        });
        jPanel1.add(dfn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 230, 30));

        dln.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(dln, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 230, 30));

        spcl_fld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        spcl_fld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spcl_fldActionPerformed(evt);
            }
        });
        jPanel1.add(spcl_fld, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, 110, 30));

        spcl.setBackground(new java.awt.Color(227, 222, 222));
        spcl.setText("Specialist");
        spcl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spclActionPerformed(evt);
            }
        });
        jPanel1.add(spcl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, -1, 30));

        cnslt.setBackground(new java.awt.Color(227, 222, 222));
        cnslt.setText("Consultant");
        cnslt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnsltActionPerformed(evt);
            }
        });
        jPanel1.add(cnslt, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 170, -1, -1));

        d_addr.setColumns(20);
        d_addr.setRows(5);
        d_addr.setBorder(null);
        jScrollPane1.setViewportView(d_addr);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 230, 100));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Doctor's last Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 140, 30));

        d_cntct.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(d_cntct, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 90, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Relevant ward ID");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 100, 30));

        sbmt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sbmt.setText("Submit");
        sbmt.setBorder(null);
        sbmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbmtActionPerformed(evt);
            }
        });
        jPanel1.add(sbmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 270, 110, 60));

        ml.setBackground(new java.awt.Color(227, 222, 222));
        buttonGroup1.add(ml);
        ml.setText("Male");
        jPanel1.add(ml, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, -1, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Specialised field");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 110, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Gender");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 90, 30));

        fml.setBackground(new java.awt.Color(227, 222, 222));
        buttonGroup1.add(fml);
        fml.setText("Female");
        jPanel1.add(fml, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, -1, -1));

        dctNic.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        dctNic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dctNicKeyTyped(evt);
            }
        });
        jPanel1.add(dctNic, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 130, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("NIC no");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 90, 30));

        d_wrd1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        d_wrd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_wrd1ActionPerformed(evt);
            }
        });
        jPanel1.add(d_wrd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, 110, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Specialist / Consultant");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 130, 40));

        updt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        updt.setText("Update");
        updt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updtActionPerformed(evt);
            }
        });
        jPanel1.add(updt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 110, 50));

        dlt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dlt.setText("Delete");
        dlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dltActionPerformed(evt);
            }
        });
        jPanel1.add(dlt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, 120, 50));

        jPanel2.setBackground(new java.awt.Color(227, 222, 222));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Extra Search results ");
        jLabel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 156, 30));

        jLabel12.setText("Emp_id");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 50, 75, 28));

        jLabel13.setText("Consultant id");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 162, 75, 28));

        jLabel14.setText("Doct_id");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 89, 75, 28));

        jLabel15.setText("Specialist_id");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 128, 75, 28));
        jPanel2.add(empID, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 50, 166, 28));
        jPanel2.add(dctID, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 89, 166, 28));
        jPanel2.add(spclID, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 128, 166, 28));
        jPanel2.add(cnsltID, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 166, 166, 31));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, 320, 210));

        srch1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        srch1.setText("Search by NIC");
        srch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srch1ActionPerformed(evt);
            }
        });
        jPanel1.add(srch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 260, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sbmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbmtActionPerformed
        // TODO add your handling code here:
        String gendr="";
        
        if(ml.isSelected()){
            gendr = "Male";
        }else if(fml.isSelected()){
            gendr = "Female";
        }
        
        String nic = dctNic.getText();
        String lname = dln.getText();
        String fname = dfn.getText();
        int wdid=0;
        boolean checkValidity=true;
        
        if(nic.equals("") || lname.equals("") || fname.equals("")){
            checkValidity=false;                
        }
        
        try {
            wdid = Integer.valueOf(d_wrd1.getText());
            Statement stat= DataBase.getStatement();
            ResultSet rs2 = stat.executeQuery("SELECT * FROM Employee WHERE nic_no='"+nic+"'");
            if(rs2.next()){
                JOptionPane.showMessageDialog(null, "This employee is already entered to the system..", "Validation Error..",JOptionPane.INFORMATION_MESSAGE);
                checkValidity=false;
            }
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid data type..", "Error...",JOptionPane.INFORMATION_MESSAGE);
            checkValidity=false;
        }catch (Exception e) {
            e.printStackTrace();
        }               
        
        if(checkValidity){
            //Insert data to Employee table

            try {
                Statement stat = DataBase.getStatement();
                stat.executeUpdate("INSERT INTO Employee (emp_fname, emp_lname, nic_no, address, contact_no, gender, career) "
                        + "VALUES('"+fname+"','"+lname+"','"+nic+"','"+d_addr.getText()+"','"+d_cntct.getText()+"','"+gendr+"','Doctor')");

            } catch (Exception e) {
                e.printStackTrace();
            }

            String empid_1="";

            //Read from Employee table & copy data to Doctor table

            try {
                Statement stat = DataBase.getStatement();
                ResultSet empId = stat.executeQuery("SELECT * FROM Employee "
                    + "WHERE emp_fname='"+dfn.getText()+"' AND emp_lname='"+ dln.getText()+"'");

                while(empId.next()){
                    empid_1 = Integer.toString(empId.getInt("emp_id"));
                }

            } catch (SQLException e1) {
                e1.printStackTrace();
            }

            try {
                Statement stat = DataBase.getStatement();
                stat.executeUpdate("INSERT INTO Doctor (emp_id, doct_fname, doct_lname, address, contact_no, ward_id) "
                        + "VALUES('"+empid_1+"','"+dfn.getText()+"','"+dln.getText()+"','"+d_addr.getText()+"','"+d_cntct.getText()+"','"+d_wrd1.getText()+"')");

            }catch (SQLException e1){
                e1.printStackTrace();
            }

            String doctid_1="", Spclfld="";

            //Read from Doctor table & copy data to Specialists / Consultant tables
            if(spcl.isSelected()){
                try {
                    Statement stat1 = DataBase.getStatement();
                    ResultSet doctId = stat1.executeQuery("SELECT * FROM Doctor "
                            + "WHERE Doctor.doct_fname='"+dfn.getText()+"' AND Doctor.doct_lname='"+ dln.getText()+"'");

                    while(doctId.next()){
                        doctid_1 = doctId.getString("doct_id");
                    }
                    Spclfld=spcl_fld.getText();
                    stat1.executeUpdate("INSERT INTO Specialist (doct_id, specialist_f_name, specialist_l_name, specialised_field) "
                            + "VALUES('"+doctid_1+"','"+dfn.getText()+"','"+dln.getText()+"','"+Spclfld+"')");

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

            String spclid_1="";

            if(cnslt.isSelected()){
                try {
                    Statement stat2 = DataBase.getStatement();
                    ResultSet doctId = stat2.executeQuery("SELECT * FROM Doctor "
                            + "WHERE Doctor.doct_fname='"+dfn.getText()+"' AND Doctor.doct_lname='"+ dln.getText()+"'");

                    while(doctId.next()){
                        doctid_1 = doctId.getString("doct_id");
                    }

                    ResultSet spclId = stat2.executeQuery("SELECT * FROM Specialist "
                            + "WHERE doct_id='"+doctid_1+"'");

                    while(spclId.next()){
                        spclid_1 = spclId.getString("specialist_id");
                    }

                    stat2.executeUpdate("INSERT INTO Consultant (doct_id, specialist_id, consult_fname, consult_lname) "
                            + "VALUES('"+doctid_1+"','"+spclid_1+"','"+dfn.getText()+"','"+dln.getText()+"')");

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }          

            dfn.setText("");
            dln.setText("");
            dctNic.setText("");
            d_addr.setText("");
            d_cntct.setText("");
            spcl_fld.setText("");
            d_wrd1.setText("");

            fml.setSelected(false);
            ml.setSelected(false);
            cnslt.setSelected(false);
            spcl.setSelected(false);
            
            JOptionPane.showMessageDialog(null, "Sucessfully added a new Doctor...", "Submission..",JOptionPane.INFORMATION_MESSAGE);

        }else{
            JOptionPane.showMessageDialog(null, "You have input data in wrong pattern..", "Validation eEror..",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_sbmtActionPerformed

    private void dfnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dfnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dfnActionPerformed

    private void spclActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spclActionPerformed
        // TODO add your handling code here:
        if(cnslt.isSelected()){
            spcl.setSelected(true);
        }
    }//GEN-LAST:event_spclActionPerformed

    private void cnsltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnsltActionPerformed
        // TODO add your handling code here:
        spcl.setSelected(true);
    }//GEN-LAST:event_cnsltActionPerformed

    private void spcl_fldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spcl_fldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spcl_fldActionPerformed

    private void d_wrd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_wrd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d_wrd1ActionPerformed

    private void srch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srch1ActionPerformed
        String dctFnm="", dctLnm="", Addr="", Dcntct="", gndr="", wrdId="", spclFld="", empId="", dctId="", spclId="", cnsltId="";
        try {
            Statement stat = DataBase.getStatement();
            ResultSet rs1 = stat.executeQuery("SELECT * FROM Employee WHERE nic_no='"+dctNic.getText()+"'");
            
            if(rs1.next()){                
                empId=rs1.getString("emp_id");
                dctFnm = rs1.getString("emp_fname");
                dctLnm = rs1.getString("emp_lname");
                Addr = rs1.getString("address");
                Dcntct = rs1.getString("contact_no");
                gndr = rs1.getString("gender");                
            }else{
                JOptionPane.showMessageDialog(null, "NIC_no you entered is wrong...", "Error..",JOptionPane.INFORMATION_MESSAGE);
                dctNic.setText("");
            }
            try {                
                ResultSet rs2 = stat.executeQuery("SELECT * FROM Doctor WHERE emp_id='"+empId+"'");
                if(rs2.next()){
                    dctId=rs2.getString("doct_id");
                    wrdId=rs2.getString("ward_id");
                }else{
                    JOptionPane.showMessageDialog(null, "NIC_no you entered is wrong...", "Error..",JOptionPane.INFORMATION_MESSAGE);
                    dctNic.setText("");
                    empId = dctFnm = dctLnm = Addr = Dcntct = gndr = "";
                }
                                
                ResultSet rs3 = stat.executeQuery("SELECT * FROM Specialist WHERE doct_id='"+dctId+"'");                
                if(rs3.next()){
                    spcl.setSelected(true);
                    spclId=rs3.getString("specialist_id");
                    spclFld=rs3.getString("specialised_field");
                }
                
                ResultSet rs4 = stat.executeQuery("SELECT * FROM Consultant WHERE specialist_id='"+spclId+"'");
                if(rs4.next()){
                    cnslt.setSelected(true);
                    cnsltId = rs4.getString("consult_id");
                }
                
            } catch (Exception e1) {
                e1.printStackTrace();
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        if(gndr.equals("Male")){
            ml.setSelected(true);
        }else if(gndr.equals("Female")){
            fml.setSelected(true);
        }
        dfn.setText(dctFnm);
        dln.setText(dctLnm);
        d_addr.setText(Addr);
        d_cntct.setText(Dcntct);
        d_wrd1.setText(wrdId);
        spcl_fld.setText(spclFld);
        empID.setText(empId);
        dctID.setText(dctId);
        spclID.setText(spclId);
        cnsltID.setText(cnsltId);
        
    }//GEN-LAST:event_srch1ActionPerformed

    private void updtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updtActionPerformed
        // TODO add your handling code here:
        String dctFnm="", dctLnm="", Addr="", Dcntct="", gndr="", spclFld="", empId="", dctId="", spclId="", cnsltId="";
        int wrdId=0;
        boolean check = false;
        try {
            Statement stat = DataBase.getStatement();
            ResultSet rs1 = stat.executeQuery("SELECT * FROM Employee WHERE nic_no='"+dctNic.getText()+"'");                       
                        
            if(!(rs1.next())){
                JOptionPane.showMessageDialog(null, "NIC_no you entered is wrong. \nCan't update..", "Error..",JOptionPane.INFORMATION_MESSAGE);
                dctNic.setText("");
            }else{
                        
                check = true;
                
                wrdId = Integer.valueOf(d_wrd1.getText());
                empId=rs1.getString("emp_id");
                dctFnm = dfn.getText();
                dctLnm = dln.getText();
                Addr = d_addr.getText();
                Dcntct = d_cntct.getText();
                spclFld =spcl_fld.getText();
                dctId = dctID.getText();
                spclId =spclID.getText();
                cnsltId = cnsltID.getText();
                
                if(fml.isSelected()){
                    gndr ="Female";
                }else if(ml.isSelected()){
                    gndr = "Male";
                }                               
            }
            
            if(check){
                stat.executeUpdate("UPDATE Employee "
                    + "SET nic_no='"+dctNic.getText()+"', emp_fname='"+dctFnm+"', emp_lname='"+dctLnm+"', address='"+Addr+"', contact_no='"+Dcntct+"', gender='"+gndr
                    + "' WHERE emp_id='"+empId+"'");
                
                stat.executeUpdate("UPDATE Doctor "
                    + "SET doct_fname='"+dctFnm+"', doct_lname='"+dctLnm+"', address='"+Addr+"', contact_no='"+Dcntct+"', ward_id='"+wrdId
                    + "' WHERE doct_id='"+dctId+"'");
                
            }
            
        }catch (NumberFormatException e) {            
            JOptionPane.showMessageDialog(null, "Invalid data type..", "Error...",JOptionPane.INFORMATION_MESSAGE);
            check=false;
        }catch (Exception e){
            e.printStackTrace();            
        }
        
        if(check && spcl.isSelected()){
            
            JOptionPane.showMessageDialog(null, "Database updated successfully..", "Updation..",JOptionPane.INFORMATION_MESSAGE);
            
            boolean check2;
            try {
                Statement stat2=DataBase.getStatement();
                ResultSet rs2 = stat2.executeQuery("SELECT * FROM Specialist WHERE doct_id='"+dctId+"'");
                if(rs2.next()){
                    spclId = rs2.getString("specialist_id");
                    check2=true;
                }else{
                    check2=false;
                }
                if(check2){
                    stat2.executeUpdate("UPDATE Specialist "
                        + "SET specialist_f_name='"+dctFnm+"', specialist_l_name='"+dctLnm+"', specialised_field='"+spclFld
                        + "' WHERE specialist_id='"+spclId+"'");
                }else if(!(check2)){
                        
                    stat2.executeUpdate("INSERT INTO Specialist (doct_id, specialist_f_name, specialist_l_name, specialised_field) "
                    + "VALUES('"+dctId+"','"+dctFnm+"','"+dctLnm+"','"+spclFld+"')");
                }
                    
            } catch (NumberFormatException e) {            
                JOptionPane.showMessageDialog(null, "Invalid data type..", "Error...",JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e1) {
                e1.printStackTrace();
            }
                
        }
        
        if(check && cnslt.isSelected()){
            boolean check3;
            try {
                Statement stat3= DataBase.getStatement();
                ResultSet rs3 = stat3.executeQuery("SELECT * FROM Consultant WHERE doct_id='"+dctId+"'");
                if(rs3.next()){
                    cnsltId = rs3.getString("consult_id");
                    check3=true;
                }else{
                    check3=false;
                }
                if(check3){
                    stat3.executeUpdate("UPDATE Consultant "
                        + "SET consult_fname='"+dctFnm+"', consult_lname='"+dctLnm
                        + "' WHERE consult_id='"+cnsltId+"'");
                }
                else if(!(check3)){
                    stat3.executeUpdate("INSERT INTO Consultant (doct_id, specialist_id, consult_fname, consult_lname) "
                        + "VALUES('"+dctId+"','"+spclId+"','"+dctFnm+"','"+dctLnm+"')");
                }
                    
            } catch (NumberFormatException e) {            
                JOptionPane.showMessageDialog(null, "Invalid data type..", "Error...",JOptionPane.INFORMATION_MESSAGE);
            }catch (Exception e2) {
                e2.printStackTrace();
            }
                
        }
                
        dfn.setText("");
        dln.setText("");
        dctNic.setText("");
        d_addr.setText("");
        d_cntct.setText("");
        spcl_fld.setText("");
        d_wrd1.setText("");
        empID.setText("");
        dctID.setText("");
        spclID.setText("");
        cnsltID.setText("");
        
        fml.setSelected(false);
        ml.setSelected(false);
        cnslt.setSelected(false);
        spcl.setSelected(false);
    }//GEN-LAST:event_updtActionPerformed

    private void dltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dltActionPerformed
        // TODO add your handling code here:
        String empId="", doctId="", spclId="", cnsltId="";
        boolean check_1=false;
        
        try {
            Statement stat = DataBase.getStatement();
            ResultSet rs = stat.executeQuery("SELECT * FROM Employee WHERE nic_no='"+dctNic.getText()+"'");
            
            if(!(rs.next())){
                JOptionPane.showMessageDialog(null, "No query with that nic_no \n Wrong nic..", "Error..",JOptionPane.INFORMATION_MESSAGE);                
            }
            
            else{
                JOptionPane.showMessageDialog(null, "Relevant data set deleted successfully..", "Deletion..",JOptionPane.INFORMATION_MESSAGE);
                empId=rs.getString("emp_id");
                check_1=true;                                                               
            }
            if(check_1){
                
                ResultSet rs2 = stat.executeQuery("SELECT * FROM Doctor WHERE emp_id='"+empId+"'");
                if(rs2.next()){
                    doctId=rs2.getString("doct_id");
                }
                ResultSet rs3=stat.executeQuery("SELECT * FROM Specialist WHERE doct_id='"+doctId+"'");
                if(rs3.next()){
                    spclId=rs3.getString("specialist_id");                    
                }
                ResultSet rs4=stat.executeQuery("SELECT * FROM Consultant WHERE specialist_id='"+spclId+"'");
                if(rs4.next()){
                    cnsltId=rs4.getString("consult_id");                    
                }
                
                if(!(cnsltId.equals(""))){
                    stat.execute("DELETE FROM Consultant WHERE consult_id='"+cnsltId+"'");
                }if(!(spclId.equals(""))){
                    stat.execute("DELETE FROM Specialist WHERE specialist_id='"+spclId+"'");
                }
                stat.execute("DELETE FROM Doctor WHERE doct_id='"+doctId+"'");
                stat.execute("DELETE FROM Employee WHERE emp_id='"+empId+"'");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        dfn.setText("");
        dln.setText("");
        dctNic.setText("");
        d_addr.setText("");
        d_cntct.setText("");
        spcl_fld.setText("");
        d_wrd1.setText("");
        empID.setText("");
        dctID.setText("");
        spclID.setText("");
        cnsltID.setText("");
        
        fml.setSelected(false);
        ml.setSelected(false);
        cnslt.setSelected(false);
        spcl.setSelected(false);
    }//GEN-LAST:event_dltActionPerformed

    private void dctNicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dctNicKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if(dctNic.getText().length() == 10){
            evt.consume();
        }
    }//GEN-LAST:event_dctNicKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorReg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton cnslt;
    private javax.swing.JTextField cnsltID;
    private javax.swing.JTextArea d_addr;
    private javax.swing.JTextField d_cntct;
    private javax.swing.JTextField d_wrd1;
    private javax.swing.JTextField dctID;
    private javax.swing.JTextField dctNic;
    private javax.swing.JTextField dfn;
    private javax.swing.JTextField dln;
    private javax.swing.JButton dlt;
    private javax.swing.JTextField empID;
    private javax.swing.JRadioButton fml;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton ml;
    private javax.swing.JButton sbmt;
    private javax.swing.JRadioButton spcl;
    private javax.swing.JTextField spclID;
    private javax.swing.JTextField spcl_fld;
    private javax.swing.JButton srch1;
    private javax.swing.JButton updt;
    // End of variables declaration//GEN-END:variables
}